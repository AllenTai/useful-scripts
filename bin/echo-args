#!/bin/bash
# @Function
# print arguments in human and debugging friendly style.
#
# @online-doc https://github.com/oldratlee/useful-scripts/blob/dev-2.x/docs/shell.md#-echo-args
# @author Jerry Lee (oldratlee at gmail dot com)
set -eEuo pipefail

digitCount() {
  # argument 1(num) is always a non-negative integer in this script usage,
  # so NO argument validation logic.
  local num="$1" count=0
  while ((num != 0)); do
    ((++count))
    ((num = num / 10))
  done
  echo "$count"
}

digit_count=$(digitCount $#)
readonly arg_count=$# digit_count

readonly red='\033[1;31m'
readonly blue='\033[1;36m'
readonly normal='\033[0m'

printArg() {
  local idx="$1" value="$2"

  # if stdout is console, turn on color output.
  if [ -t 1 ]; then
    printf "%${digit_count}s/%s: ${red}[${blue}%s${red}]${normal}\n" "$idx" "$arg_count" "$value"
  else
    printf "%${digit_count}s/%s: [%s]\n" "$idx" "$arg_count" "$value"
  fi
}

printArg 0 "$0"
idx=1
for a; do
  printArg $((idx++)) "$a"
done
